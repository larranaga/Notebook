\BOOKMARK [1][-]{section.1}{Graphs}{}% 1
\BOOKMARK [2][-]{subsection.1.1}{Articulation points}{section.1}% 2
\BOOKMARK [2][-]{subsection.1.2}{Biconected graph}{section.1}% 3
\BOOKMARK [2][-]{subsection.1.3}{Bridges}{section.1}% 4
\BOOKMARK [2][-]{subsection.1.4}{Tarjan SCC}{section.1}% 5
\BOOKMARK [2][-]{subsection.1.5}{Fast Dijkstra's algorithm}{section.1}% 6
\BOOKMARK [2][-]{subsection.1.6}{Bellman Ford}{section.1}% 7
\BOOKMARK [2][-]{subsection.1.7}{Eulerian Path}{section.1}% 8
\BOOKMARK [2][-]{subsection.1.8}{Topological sort}{section.1}% 9
\BOOKMARK [2][-]{subsection.1.9}{Kruskal's minimum spanning tree}{section.1}% 10
\BOOKMARK [2][-]{subsection.1.10}{Lowest Common ancestor}{section.1}% 11
\BOOKMARK [1][-]{section.2}{Geometry}{}% 12
\BOOKMARK [2][-]{subsection.2.1}{Geometry}{section.2}% 13
\BOOKMARK [2][-]{subsection.2.2}{Geometry \(Java\)}{section.2}% 14
\BOOKMARK [2][-]{subsection.2.3}{Convex Hull Monotone Chain}{section.2}% 15
\BOOKMARK [2][-]{subsection.2.4}{Delaunay triangulation}{section.2}% 16
\BOOKMARK [2][-]{subsection.2.5}{Delaunay triangulation \( java \)}{section.2}% 17
\BOOKMARK [1][-]{section.3}{Data Structures}{}% 18
\BOOKMARK [2][-]{subsection.3.1}{Mo's algorithm}{section.3}% 19
\BOOKMARK [2][-]{subsection.3.2}{Segment Trees with lazy propagation}{section.3}% 20
\BOOKMARK [2][-]{subsection.3.3}{Segment Trees with lazy propagation \(Java\)}{section.3}% 21
\BOOKMARK [2][-]{subsection.3.4}{Fenwick Tree}{section.3}% 22
\BOOKMARK [2][-]{subsection.3.5}{Union Find \(Short\)}{section.3}% 23
\BOOKMARK [2][-]{subsection.3.6}{Union Find}{section.3}% 24
\BOOKMARK [1][-]{section.4}{Strings}{}% 25
\BOOKMARK [2][-]{subsection.4.1}{KMP}{section.4}% 26
\BOOKMARK [2][-]{subsection.4.2}{Suffix Array}{section.4}% 27
\BOOKMARK [2][-]{subsection.4.3}{Fast Fourier Transform \(convolution\)}{section.4}% 28
\BOOKMARK [1][-]{section.5}{Flows}{}% 29
\BOOKMARK [2][-]{subsection.5.1}{Ford Fulkerson}{section.5}% 30
\BOOKMARK [2][-]{subsection.5.2}{Edmons Karp Min cut}{section.5}% 31
\BOOKMARK [2][-]{subsection.5.3}{Hopcroft karp's maximum bipartite matching}{section.5}% 32
\BOOKMARK [2][-]{subsection.5.4}{Maxmium bipartite matching \(short but slower\)}{section.5}% 33
\BOOKMARK [1][-]{section.6}{Math}{}% 34
\BOOKMARK [2][-]{subsection.6.1}{general math tricks}{section.6}% 35
\BOOKMARK [2][-]{subsection.6.2}{Miller Rabin's primality test}{section.6}% 36
\BOOKMARK [2][-]{subsection.6.3}{Pollard rho}{section.6}% 37
\BOOKMARK [2][-]{subsection.6.4}{number theory general}{section.6}% 38
\BOOKMARK [1][-]{section.7}{Miscellaneous}{}% 39
\BOOKMARK [2][-]{subsection.7.1}{c++ ios tricks}{section.7}% 40
\BOOKMARK [2][-]{subsection.7.2}{java IO template and iterative binary search}{section.7}% 41
